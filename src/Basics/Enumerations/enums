Basics.Enumerations serve the purpose of representing a group of named constants in a programming language.
For example the 4 suits in a deck of playing cards may be 4 enumerators named Club, Diamond, Heart, and Spade, belonging to an enumerated type named Suit.
Other examples include natural enumerated types (like the planets, days of the week, colors, directions, etc.).
Enums are used when we know all possible values at compile time, such as choices on a menu, rounding modes, command line flags, etc.
It is not necessary that the set of constants in an enum type stay fixed for all time.
In Java (from 1.5), enums are represented using enum data type. Java enums are more powerful than C/C++ enums .
In Java, we can also add variables, methods and constructors to it.
The main objective of enum is to define our own data types(Enumerated Data Types).

---Declaration of enum in java :

   ##Enum declaration can be done outside a Class or inside a Class but not inside a Method.
   ##First line inside enum should be list of constants and then other things like methods, variables and constructor.
   ##According to Java naming conventions, it is recommended that we name constant with all capital letters

---Important points of enum :

   ##Every enum internally implemented by using Class.
   /* internally below enum Color is converted to

   enum Color
       {
           RED, GREEN, BLUE;
       }

   class Color
   {
        public static final Color RED = new Color();
        public static final Color BLUE = new Color();
        public static final Color GREEN = new Color();
   }*/
   ##Every enum constant represents an object of type enum.
   ##enum type can be passed as an argument to switch statement.

   ##Every enum constant is always implicitly public static final. Since it is static, we can access it by using enum Name. Since it is final, we can’t create child enums.
   ##We can declare main() method inside enum. Hence we can invoke enum directly from the Command Prompt.

---Enum and OOPSConcepts.Inheritance :

   ##All enums implicitly extend java.lang.Enum class. As a class can only extend one parent in Java, so an enum cannot extend anything else.
   ##toString() method is overridden in java.lang.Enum class,which returns enum constant name.
   ##enum can implement many interfaces.


---values(), ordinal() and valueOf() methods :
   ##These methods are present inside java.lang.Enum.
   ##values() method can be used to return all values present inside enum.
   ##Order is important in enums.By using ordinal() method, each enum constant index can be found, just like array index.
   ##valueOf() method returns the enum constant of the specified string value, if exists.


---enum and constructor :
   ##enum can contain constructor and it is executed separately for each enum constant at the time of enum class loading.
   ##We can’t create enum objects explicitly and hence we can’t invoke enum constructor directly.

---enum and methods :
   ##enum can contain concrete methods only i.e. no any abstract method.